security:
    encoders:
        App\Entity\User:
            algorithm: auto
        App\Entity\Client:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        app_user_client:
            entity:
                class: App\Entity\Client
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        client:
            anonymous: true
            lazy: true
            switch_user: { role: ROLE_CLIENT }
            provider: app_user_client
            pattern: ^/client
            guard:
                authenticators:
                    - App\Security\ClientAuthenticator
            logout:
                path: app_logout_client
                target: home
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginAuthenticator
            logout:
                path: app_logout_staff
                target: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN]
        ROLE_CLIENT: [ROLE_CLIENT]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/client/login, roles: PUBLIC_ACCESS }
        - { path: ^/client/logout, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/client, roles: ROLE_CLIENT }
